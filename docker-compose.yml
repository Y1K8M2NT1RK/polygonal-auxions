services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    ports:
      - "3001:3000"
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - app_network
    depends_on:
      - db
    profiles: ["dev"]
    env_file: .env
    command: >
      /bin/sh -c '
        npx prisma generate &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm run dev
      '

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports: 
      - "$DATABASE_PORT:5432"
    networks:
      - app_network
    env_file: .env
  # profiles removed to ensure availability for dependent services

  verify:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    # verifyはコンテナ内で自己疎通を行うため、ポート公開は不要
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - app_network
    depends_on:
      - db
    env_file: .env
    environment:
      # Next.js起動・疎通確認の可変項目（必要に応じて上書き可能）
      HOST: 0.0.0.0
      PORT: 3000
      SMOKE_HOST: localhost
      SMOKE_PORT: 3000
      SMOKE_PATH: /
    command: >
      /bin/sh -c '
        npm run build:docker &&
        npm run smoke
      '
    profiles: ["verify"]

  prisma-studio: # profile 無し: そのまま `docker compose up -d prisma-studio`
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    ports:
      - "5555:5555"
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - app_network
    depends_on:
      - db
    env_file: .env
    command: >
      /bin/sh -c '
        npx prisma generate && \
        npx prisma migrate deploy && \
        npx prisma studio --port 5555 --browser none
      '

volumes:
  node_modules:
  postgres_data:

networks:
  app_network:
    driver: bridge