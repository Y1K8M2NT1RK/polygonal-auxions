services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    ports:
      - "3001:3000"
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - app_network
    depends_on:
      - db
    profiles: ["dev"]
    env_file: .env
    command: >-
      /bin/sh -lc "
        npm run prisma:generate && \
        npx prisma migrate deploy && \
        npx prisma db seed && \
        npm run dev
      "

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports: 
      - "$DATABASE_PORT:5432"
    networks:
      - app_network
    env_file: .env
  # profiles removed to ensure availability for dependent services

  mailpit:
    image: axllent/mailpit:v1.14
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP server
    environment:
      MP_DATA_FILE: /data/mailpit.db
    volumes:
      - mailpit_data:/data
    networks:
      - app_network
    profiles: ["dev"]

  verify:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    # verifyはコンテナ内で自己疎通を行うため、ポート公開は不要
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - app_network
    depends_on:
      - db
    env_file: .env
    environment:
      # Next.js起動・疎通確認の可変項目（必要に応じて上書き可能）
      HOST: 0.0.0.0
      PORT: 3000
      SMOKE_HOST: localhost
      SMOKE_PORT: 3000
      SMOKE_PATH: /
    command: >
      /bin/sh -c '
        npm run build:docker &&
        npm run smoke
      '
    profiles: ["verify"]

  prisma-studio: # profile 無し: そのまま `docker compose up -d prisma-studio`
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    ports:
      - "5555:5555"
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - app_network
    depends_on:
      - db
    env_file: .env
    command: >-
      /bin/sh -lc "
        set -eu; \
        LOCK=/tmp/prisma-generate.lock; \
        if [ ! -d node_modules/@prisma/client ]; then \
          if ( set -o noclobber; echo $$$$ > \"$$LOCK\" ) 2>/dev/null; then \
            echo '[prisma-studio] acquiring lock and generating prisma client'; \
            npm run prisma:generate; \
            rm -f \"$$LOCK\"; \
          else \
            echo '[prisma-studio] waiting for prisma generate lock...'; \
            while [ -f \"$$LOCK\" ]; do sleep 1; done; \
          fi; \
        else \
          echo '[prisma-studio] prisma client exists -> skip generate'; \
        fi && \
        npx prisma migrate deploy && \
        npx prisma studio --port 5555 --browser none
      "

volumes:
  node_modules:
  postgres_data:
  mailpit_data:

networks:
  app_network:
    driver: bridge